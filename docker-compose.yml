version: "3.6"
services:
  postgres:
    image: postgres
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env
    networks:
      - app-network
  server:
    build: server
    container_name: server
    restart: always
    ports:
      - "3000:3000"
      - "5555:5555"
    depends_on:
      - postgres
    volumes:
      - ./server/src:/server/src
      - ./server/prisma:/server/prisma
    env_file:
      - .env
    networks:
      - app-network
  client:
    build: client
    container_name: client
    restart: always
    environment:
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "8080:8080"
    depends_on:
      - server
    volumes:
      - ./client/src:/client/src:cached
    env_file:
      - .env
    networks:
      - app-network
#  nginx:
#    image: nginx:latest
#    container_name: nginx
#    restart: unless-stopped
#    ports:
#      - "80:80"
#      - "443:443"
#    volumes:
#      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
#      - ./nginx/development.conf:/etc/nginx/conf.d/app.conf
#      - ./nginx/ssl/local.crt:/etc/nginx/ssl/ssl.crt
#      - ./nginx/ssl/local.key:/etc/nginx/ssl/ssl.key
#    networks:
#      - app-network

networks:
  app-network:
    driver: bridge
